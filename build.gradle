plugins {
    id("org.springframework.boot") version "3.3.4" apply false
    id("io.spring.dependency-management") version "1.1.4" apply false
}

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply(plugin: "java-library")
    apply(plugin: "io.spring.dependency-management")

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    group = "com.janwee.bookstore"
    version = "0.0.1-SNAPSHOT"

    configurations {
        compileOnly.extendsFrom(annotationProcessor)
    }

    configurations.configureEach {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }

    dependencies {
        implementation("org.ow2.asm:asm:9.6")
        implementation("org.springframework.boot:spring-boot-starter-log4j2")

        annotationProcessor("org.projectlombok:lombok:1.18.24")

        testRuntimeOnly("org.junit.platform:junit-platform-launcher")
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:3.3.4")
            mavenBom("org.springframework.cloud:spring-cloud-dependencies:2023.0.3")
        }

        dependencies {
            dependency("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0")
            dependency("org.hibernate.orm:hibernate-processor:7.0.0.Alpha3")
            dependency("org.postgresql:postgresql:42.6.0")
            dependency("jakarta.servlet:jakarta.servlet-api:6.1.0")
            dependency("org.mockito:mockito-core:5.19.0")
        }
    }

    test {
        useJUnitPlatform()
        include("unit/**")
    }
}

tasks.register("hello") {
    doLast {
        println("Hello!")
    }
}

tasks.register("greet") {
    doLast {
        println("How are you?")
    }
//    dependsOn("hello")
}

tasks.named("hello").configure {
//    mustRunAfter(tasks.named("hello"))
//    shouldRunAfter(tasks.named("hello"))
    finalizedBy(tasks.named("greet"))
}